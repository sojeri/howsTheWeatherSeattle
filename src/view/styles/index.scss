@import './variables';
@import './skyline/index';

// TODO: consider fallback values for native CSS vars
// TODO: refactor positions & sizing to support media queries
// TODO: linter for hard-coded values outside variables & :root selector? is necessary?
:root {
    --frame-width: 800px;
    --half-frame-width: 400px;
    --light-position: 120px;
    --light-size: 70px;
}

@media all and (max-width: 992px) {
    :root {
        --frame-width: 400px;
        --half-frame-width: 200px;
        --light-position: 60px;
        --light-size: 50px;
    }
}

:root {
    --wind-frame-size: calc(var(--frame-width) * 1.5);
    --weather-height: calc(var(--frame-width) / 5 * 4);
    --weather-width: var(--frame-width);
}

.frame {
    position: absolute;
    top: 50%;
    left: 50%;
    width: var(--frame-width);
    height: var(--frame-width);
    margin-top: calc(-1 * var(--half-frame-width));
    margin-left: calc(-1 * var(--half-frame-width));
    border-radius: 2px;
    box-shadow: 0 0 16px 0 rgba(0,0,0,0.2);
    overflow: hidden;
    font-family: 'Droid Sans', Helvetica, sans-serif;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

.center {
    position: relative;
    height: 100%;
    width: 100%;
}

#loading {
    z-index: $absoluteForegroundLayer;
    position: absolute;
    height: var(--frame-width);
    width: var(--frame-width);
    background: #ccc;
    opacity: 1;
    top: 0;
    transition: all 1s;
}

#loading.loaded {
    opacity: 0;
    top: calc(-1 * var(--frame-width));
}

#spinner {
    position: absolute;
    top: calc(50% - .5 * var(--light-size));
    left: calc(50% - .5 * var(--light-size));
    
    background: #fc6;
    height: var(--light-size);
    width: var(--light-size);
    animation: spinHorizontal 1s ease-in-out infinite alternate;
    opacity: 1;
    transition: all .3s;
}

.loaded #spinner {
    opacity: 0;
}

#drop {
    height: calc(.5 * var(--light-size));
    width: calc(.5 * var(--light-size));
    border-bottom-right-radius: 50%;
    border-bottom-left-radius: 50%;
    border-top-left-radius: 50%;
    transform: rotate(-45deg);
    background: #acf;
}

@keyframes spinHorizontal {
    0% { transform: rotateY(0deg); }
    100% { background: #69f; transform: rotateY(360deg); }
}

#weather {
    height: var(--weather-height);
    width: var(--frame-width);
    position: relative;
    overflow: hidden;
}

.hidden {
    display: none;
}

.flex {
    display: flex;
    justify-content: center;
    align-items: center;
}

.clouds, .rain, .snow {
    background: $cloudyDayBgColor;
}

.clear, .mist, .smoke {
    background: $clearDayBgColor;
}

#data {
    height: calc(var(--frame-width) / 5);
    width: var(--frame-width);
    flex-flow: row nowrap;
    justify-content: space-around;
    background: $dataBgColor;
}

.temperatures {
    flex-flow: column;
}

.temperatures h2 {
    margin: 0;
}