@import '../variables';

.cloud,
.puff,
.cloud:after,
.puff:after {
    position: absolute;
    background: $cloudDayColor;
    border-radius: 50%;
    z-index: $foregroundWeather;
}

.light {
    // TODO: can has pseudo selector usage here instead of repeated cloud puff forever?
    .cloud,
    .puff,
    .cloud:after,
    .puff:after {
        background: $lightCloudDayColor;
        transform: $lightCloudTransforms;
    }
}

.heavy {
    .cloud,
    .puff,
    .cloud:after,
    .puff:after {
        background: $heavyCloudDayColor;
        transform: $heavyCloudTransforms;
    }
}

.isFalling {
    .cloud,
    .puff,
    .cloud:after,
    .puff:after {
        background: $cloudDayColor;
    }
}

.cloud,
.cloud:after {
    height: var(--base-width);
    filter: blur(calc(var(--base-width) * 0.1));
}

.puff,
.puff:after {
    height: calc(var(--base-width) * 0.8);
    width: calc(var(--base-width) * 2.5);
    filter: blur(calc(var(--base-width) * 0.15));
}

.cloud.one {
    top: calc(var(--base-width) * -0.1);
    left: calc(var(--base-width) * -0.3);
    width: calc(var(--base-width) * 5);

    &:after {
        width: calc(var(--base-width) * 5);
    }
}

.cloud.two {
    top: calc(var(--base-width) * 0.4);
    left: calc(var(--base-width) * 0.8);
    width: calc(var(--base-width) * 3);

    &:after {
        width: calc(var(--base-width) * 3);
    }
}

.cloud.three {
    top: calc(var(--base-width) * 0.8);
    left: calc(var(--base-width) * 1.8);
    width: calc(var(--base-width) * 4);

    &:after {
        width: calc(var(--base-width) * 4);
    }
}

.puff.one {
    top: calc(var(--base-width) * 1.2);
    left: calc(var(--base-width) * 0.2);
}

.puff.two {
    top: calc(var(--base-width) * 1.4);
    left: calc(var(--base-width) * 1.2);
}

.puff.three {
    top: calc(var(--base-width) * 0.5);
    left: calc(var(--base-width) * 3.3);
}
